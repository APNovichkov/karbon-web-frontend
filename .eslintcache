[{"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/index.js":"1","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/reportWebVitals.js":"2","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/App.js":"3","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/pages/home.js":"4","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/footer.js":"5","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/searchHeader.js":"6","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/storeCard.js":"7","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/storeCardTag.js":"8","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/map.js":"9","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/utils/urlUtils.js":"10","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/placesAutocomplete.js":"11","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/utils/numUtils.js":"12"},{"size":500,"mtime":1610058770250,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610058770252,"results":"15","hashOfConfig":"14"},{"size":502,"mtime":1610059549392,"results":"16","hashOfConfig":"14"},{"size":3151,"mtime":1610489901833,"results":"17","hashOfConfig":"14"},{"size":465,"mtime":1610059106231,"results":"18","hashOfConfig":"14"},{"size":5428,"mtime":1614325849640,"results":"19","hashOfConfig":"14"},{"size":2595,"mtime":1610490209834,"results":"20","hashOfConfig":"14"},{"size":334,"mtime":1610069722223,"results":"21","hashOfConfig":"14"},{"size":860,"mtime":1610166016333,"results":"22","hashOfConfig":"14"},{"size":818,"mtime":1610424297480,"results":"23","hashOfConfig":"14"},{"size":1773,"mtime":1610166094851,"results":"24","hashOfConfig":"14"},{"size":319,"mtime":1610418944765,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"14bzs9a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/index.js",[],["57","58"],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/reportWebVitals.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/App.js",["59","60"],"import { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport './App.css';\n\n// Import Pages\nimport Home from \"./pages/home\";\n\n// Import Components\nimport Footer from \"./components/footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div className=\"body-wrapper\">\n          <Switch>\n            <Route path=\"/\" exact component={Home}></Route>\n          </Switch>\n        </div>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/pages/home.js",["61","62","63"],"import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Import components\nimport SearchHeader from \"./../components/searchHeader\";\nimport StoreCard from \"./../components/storeCard\";\n\n// Import Utils\nimport { getSearchUrl } from \"../utils/urlUtils\";\n\nconst Home = (props) => {\n  const [searchItems, setSearchItems] = useState([]);\n\n  const [relevantResult, setRelevantResult] = useState([]);\n  const [bestPriceResult, setBestPriceResult] = useState([]);\n  const [closestResult, setClosestResult] = useState([]);\n\n  const [userAddress, setHomeUserAddress] = useState();\n  const [isLoadingResults, setIsLoadingResults] = useState(false);\n\n  const handleSearchClick = (searchTerm, userLat, userLong) => {\n    console.log(\"Handling search click with search term: \", searchTerm);\n\n    setIsLoadingResults(true);\n\n    axios.get(getSearchUrl(searchTerm, userLat, userLong)).then((res) => {\n      console.log(\"Response from search: \", res.data);\n\n      setRelevantResult(res.data.relevant_result);\n      setBestPriceResult(res.data.best_price_result);\n      setClosestResult(res.data.closest_result);\n\n      setIsLoadingResults(false);\n    });\n  };\n\n  return (\n    <div className=\"home-wrapper\">\n      <SearchHeader handleSearchClick={handleSearchClick} setHomeUserAddress={setHomeUserAddress} />\n\n      {isLoadingResults && (\n        <div className=\"loading-results-wrapper text-center\">\n          <img src=\"/assets/images/logo48.png\" className=\"loading-karbon-logo\" id=\"karbon-logo\" />\n        </div>\n      )}\n      {!isLoadingResults && (\n        <div className=\"results-wrapper\">\n          {bestPriceResult.length > 0 ? (\n            <div>\n              <div className=\"best-price-wrapper\">\n                <div className=\"best-price-header\">\n                  <span className=\"fas fa-tag\"></span> Best Price\n                </div>\n              </div>\n              {bestPriceResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {bestPriceResult.length > 0 ? (\n            <div>\n              <div className=\"closest-result-wrapper\">\n                <div className=\"closest-result-header\">\n                  <span className=\"fas fa-map-marked-alt\"></span> Closest Location\n                </div>\n              </div>\n              {closestResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {relevantResult.length > 0 ? (\n            <div>\n              <div className=\"relevant-result-wrapper\">\n                <div className=\"relevant-result-header\">\n                  <span className=\"far fa-thumbs-up\"></span> Most Relevant\n                </div>\n              </div>\n              {relevantResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/footer.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/searchHeader.js",["64","65","66","67","68","69","70","71","72","73"],"import React, { useEffect, useState } from \"react\";\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\n\nimport PlacesAutocomplete from \"./placesAutocomplete\";\n\nconst SearchHeader = (props) => {\n  let { handleSearchClick, setHomeUserAddress } = props;\n\n  // User Location Variables\n  const [isUserLocated, setIsUserLocated] = useState(false);\n  const [locationTerm, setLocationTerm] = useState(\"\");\n  const [isLocationExact, setIsLocationExact] = useState();\n  const [userCoordinates, setUserCoordinates] = useState();\n  const [userAddress, setUserAddress] = useState();\n  const [userCity, setUserCity] = useState();\n  const [userState, setUserState] = useState();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSearchTermEmpty, setIsSearchTermEmpty] = useState(true);\n  const [searchClicked, setSearchClicked] = useState(false);\n\n  const handleSubmitSearchTermClick = (event) => {\n    event.preventDefault();\n\n    console.log(\"Searching for term:\", searchTerm);\n    setSearchClicked(true);\n    handleSearchClick(searchTerm, userCoordinates[0], userCoordinates[1]);\n  };\n\n  const selectLocationClick = (event) => {\n    event.preventDefault();\n\n    console.log(\"Selected address: \", userAddress);\n\n    setHomeUserAddress(userAddress);\n\n    geocodeByAddress(userAddress.label)\n      .then((results) => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        console.log(\"Successfully got latitude and longitude\", { lat, lng });\n        setUserCoordinates([lat, lng]);\n        setIsUserLocated(true);\n      });\n  };\n\n  const locateUser = (event) => {\n    event.preventDefault();\n\n    if (\"geolocation\" in navigator) {\n      console.log(\"location is available\");\n\n      navigator.geolocation.getCurrentPosition((position) => {\n        console.log(\"Latitude: \", position.coords.latitude);\n        console.log(\"Longitude: \", position.coords.longitude);\n\n        setIsLocationExact(true);\n        setUserCoordinates([position.coords.latitude, position.coords.longitude]);\n      });\n    }\n\n    console.log(\"Locating User\");\n  };\n\n  useEffect(() => {\n    console.log(\"Search term changed to: \", searchTerm);\n    if (searchTerm === \"\") {\n      setIsSearchTermEmpty(true);\n    } else {\n      setIsSearchTermEmpty(false);\n    }\n  }, [searchTerm]);\n\n  return (\n    <div className=\"search-header-wrapper text-center\">\n      <div className=\"search-header\">\n        <div className=\"logo-wrapper\">\n          <img src=\"/assets/images/logo.png\" className=\"search-header-logo\" width=\"100\"></img>\n        </div>\n        <div className=\"search-header-text-wrapper\">\n          {isUserLocated ? (\n            <div className=\"search-header-text\">\n              Search for Products or Stores in <span className=\"bold-text green-color\">{userAddress.label}</span>\n            </div>\n          ) : (\n            <div className=\"search-header-text\">Where do you want to find Products or Stores?</div>\n          )}\n        </div>\n        {isUserLocated ? (\n          <div className=\"search-bar-wrapper\">\n            <form onSubmit={handleSubmitSearchTermClick} className=\"form-inline search-bar-form\">\n              <input\n                value={searchTerm}\n                onChange={(event) => setSearchTerm(event.target.value)}\n                type=\"text\"\n                className=\"search-bar\"\n                placeholder=\"Search...\"\n              ></input>\n              <button type=\"submit\" className=\"search-bar-button\">\n                <span className=\"fas fa-search search-bar-icon\"></span>\n              </button>\n            </form>\n          </div>\n        ) : (\n          <div className=\"search-bar-wrapper\">\n            <form className=\"form-inline search-bar-form\">\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"search-header-locate-me\">\n                  <div className=\"d-flex\">\n                    <button onClick={(event) => locateUser(event)} className=\"search-bar-button\">\n                      <span className=\"fas fa-location-arrow location-icon\"></span>\n                    </button>\n                    <span className=\"search-header-text locate-me-text\">{\"  \"}Locate Me</span>\n                  </div>\n                </div>\n                <div className=\"search-header-find-place\">\n                  <div className=\"d-flex\">\n                    <GooglePlacesAutocomplete\n                      style={{ width: \"200px\" }}\n                      selectProps={{\n                        userAddress,\n                        onChange: setUserAddress,\n                      }}\n                    />\n                    <button onClick={(event) => selectLocationClick(event)} className=\"search-bar-button\">\n                      <span className=\"fas fa-arrow-right search-bar-icon\"></span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n\n        {!searchClicked && (isUserLocated ? (\n          <div className=\"under-development-warning\">\n            Search <b>\"iPhone Charger\"</b> to see working version\n          </div>\n        ) : (\n          <div className=\"under-development-warning\">\n            Search <b>\"Moab, UT, USA\"</b> to see working version\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchHeader;\n","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/storeCard.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/storeCardTag.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/map.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/utils/urlUtils.js",["74"],"const BASE_URL = \"http://127.0.0.1:5000\"\n\nexport const getSearchUrl = (searchTerm, lat, long) => {\n    return `${BASE_URL}/search?searchTerm=${searchTerm}&latitude=${lat}&longitude=${long}`;\n}\n\nexport const getGMapsDirectionsUrl = (origin, destination) => {\n    let gmaps_url = \"https://www.google.com/maps/dir/?api=1\";\n\n    let formattedOrigin = convertAddressToGoogleUrl(origin);\n    let formattedDestination = convertAddressToGoogleUrl(destination);\n\n    return `${gmaps_url}&origin=${formattedOrigin}&destination=${formattedDestination}`;\n}   \n\nconst convertAddressToGoogleUrl = (addy) => {\n    return addy.replace(\" \", \"+\").replace(\",\", \"%2C\");\n}\n\nconst fixedEncodeURIComponent = (str) => {\n    return encodeURIComponent(str).replace(/[!'()*]/g, (c) => {\n      return '%' + c.charCodeAt(0).toString(16)\n    })\n  }","/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/components/placesAutocomplete.js",[],"/Users/andreynovichkov/Desktop/Make-School/Term-8/winter-intensive/karbon-web/src/utils/numUtils.js",["75"],"export const convertTime = (inputTime) => {\n    let hours = inputTime.split(\":\")[0];\n    let minutes = inputTime.split(\":\")[1];\n\n    let outTime = inputTime;\n\n    if (hours == 0){\n        outTime = `12:${minutes}AM`;\n    }else if (hours >= 12){\n        outTime = `${hours-12}:${minutes}PM`;\n    }\n\n    return outTime;\n}",["76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":47,"nodeType":"84","messageId":"85","endLine":1,"endColumn":51},{"ruleId":"82","severity":1,"message":"86","line":1,"column":53,"nodeType":"84","messageId":"85","endLine":1,"endColumn":61},{"ruleId":"82","severity":1,"message":"87","line":12,"column":10,"nodeType":"84","messageId":"85","endLine":12,"endColumn":21},{"ruleId":"82","severity":1,"message":"88","line":12,"column":23,"nodeType":"84","messageId":"85","endLine":12,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":43,"column":11,"nodeType":"91","endLine":43,"endColumn":99},{"ruleId":"82","severity":1,"message":"92","line":4,"column":8,"nodeType":"84","messageId":"85","endLine":4,"endColumn":26},{"ruleId":"82","severity":1,"message":"93","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":22},{"ruleId":"82","severity":1,"message":"94","line":11,"column":24,"nodeType":"84","messageId":"85","endLine":11,"endColumn":39},{"ruleId":"82","severity":1,"message":"95","line":12,"column":10,"nodeType":"84","messageId":"85","endLine":12,"endColumn":25},{"ruleId":"82","severity":1,"message":"96","line":15,"column":10,"nodeType":"84","messageId":"85","endLine":15,"endColumn":18},{"ruleId":"82","severity":1,"message":"97","line":15,"column":20,"nodeType":"84","messageId":"85","endLine":15,"endColumn":31},{"ruleId":"82","severity":1,"message":"98","line":16,"column":10,"nodeType":"84","messageId":"85","endLine":16,"endColumn":19},{"ruleId":"82","severity":1,"message":"99","line":16,"column":21,"nodeType":"84","messageId":"85","endLine":16,"endColumn":33},{"ruleId":"82","severity":1,"message":"100","line":19,"column":10,"nodeType":"84","messageId":"85","endLine":19,"endColumn":27},{"ruleId":"89","severity":1,"message":"90","line":77,"column":11,"nodeType":"91","endLine":77,"endColumn":89},{"ruleId":"82","severity":1,"message":"101","line":20,"column":7,"nodeType":"84","messageId":"85","endLine":20,"endColumn":30},{"ruleId":"102","severity":1,"message":"103","line":7,"column":15,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"78","replacedBy":"106"},{"ruleId":"80","replacedBy":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'searchItems' is assigned a value but never used.","'setSearchItems' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'PlacesAutocomplete' is defined but never used.","'locationTerm' is assigned a value but never used.","'setLocationTerm' is assigned a value but never used.","'isLocationExact' is assigned a value but never used.","'userCity' is assigned a value but never used.","'setUserCity' is assigned a value but never used.","'userState' is assigned a value but never used.","'setUserState' is assigned a value but never used.","'isSearchTermEmpty' is assigned a value but never used.","'fixedEncodeURIComponent' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["108"],["109"],"no-global-assign","no-unsafe-negation"]