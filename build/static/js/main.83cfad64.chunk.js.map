{"version":3,"sources":["components/placesAutocomplete.js","components/searchHeader.js","components/map.js","components/storeCardTag.js","utils/numUtils.js","utils/urlUtils.js","components/storeCard.js","pages/home.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["PlacesAutocomplete","SearchHeader","props","handleSearchClick","setHomeUserAddress","useState","isUserLocated","setIsUserLocated","setIsLocationExact","userCoordinates","setUserCoordinates","userAddress","setUserAddress","searchTerm","setSearchTerm","setIsSearchTermEmpty","searchClicked","setSearchClicked","useEffect","console","log","className","src","width","label","onSubmit","event","preventDefault","value","onChange","target","type","placeholder","onClick","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","locateUser","style","selectProps","geocodeByAddress","then","results","getLatLng","lat","lng","selectLocationClick","mapStyles","borderRadius","marginRight","MapContainer","google","this","zoom","fullscreenControl","mapTypeControl","initialCenter","storeCoordinates","onMarkerClick","name","storeName","Component","GoogleApiWrapper","apiKey","StoreCardTag","iconClass","colorClass","text","convertTime","inputTime","hours","split","minutes","outTime","getGMapsDirectionsUrl","origin","destination","formattedOrigin","convertAddressToGoogleUrl","formattedDestination","addy","replace","StoreCard","productData","store_name","distance_from_user","address","closing_hour","in_store_price","product_name","href","phone_number","store_coordinates","Home","relevantResult","setRelevantResult","bestPriceResult","setBestPriceResult","closestResult","setClosestResult","isLoadingResults","setIsLoadingResults","userLat","userLong","axios","get","long","getSearchUrl","res","data","relevant_result","best_price_result","closest_result","id","length","map","item","Footer","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83cfad64.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nlet autoComplete;\n\nconst loadScript = (url, callback) => {\n  let script = document.createElement(\"script\");\n  script.type = \"text/javascript\";\n\n  if (script.readyState) {\n    script.onreadystatechange = function() {\n      if (script.readyState === \"loaded\" || script.readyState === \"complete\") {\n        script.onreadystatechange = null;\n        callback();\n      }\n    };\n  } else {\n    script.onload = () => callback();\n  }\n\n  script.src = url;\n  document.getElementsByTagName(\"head\")[0].appendChild(script);\n};\n\nfunction handleScriptLoad(updateQuery, autoCompleteRef) {\n  autoComplete = new window.google.maps.places.Autocomplete(\n    autoCompleteRef.current,\n    { types: [\"(cities)\"], componentRestrictions: { country: \"us\" } }\n  );\n  autoComplete.setFields([\"address_components\", \"formatted_address\"]);\n  autoComplete.addListener(\"place_changed\", () =>\n    handlePlaceSelect(updateQuery)\n  );\n}\n\nasync function handlePlaceSelect(updateQuery) {\n  const addressObject = autoComplete.getPlace();\n  const query = addressObject.formatted_address;\n  updateQuery(query);\n  console.log(addressObject);\n}\n\nfunction PlacesAutocomplete() {\n  const [query, setQuery] = useState(\"\");\n  const autoCompleteRef = useRef(null);\n\n  useEffect(() => {\n    loadScript(\n      `https://maps.googleapis.com/maps/api/js?key=AIzaSyDiBIZPIuMBCPsaiQxYcqjuQ-WrVSqs90w&libraries=places`,\n      () => handleScriptLoad(setQuery, autoCompleteRef)\n    );\n  }, []);\n\n  return (\n    <div className=\"search-location-input\">\n      <input\n        ref={autoCompleteRef}\n        onChange={event => setQuery(event.target.value)}\n        placeholder=\"Enter a City\"\n        value={query}\n      />\n    </div>\n  );\n}\n\nexport default PlacesAutocomplete;","import React, { useEffect, useState } from \"react\";\nimport GooglePlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-google-places-autocomplete\";\n\nimport PlacesAutocomplete from \"./placesAutocomplete\";\n\nconst SearchHeader = (props) => {\n  let { handleSearchClick, setHomeUserAddress } = props;\n\n  // User Location Variables\n  const [isUserLocated, setIsUserLocated] = useState(false);\n  const [locationTerm, setLocationTerm] = useState(\"\");\n  const [isLocationExact, setIsLocationExact] = useState();\n  const [userCoordinates, setUserCoordinates] = useState();\n  const [userAddress, setUserAddress] = useState();\n  const [userCity, setUserCity] = useState();\n  const [userState, setUserState] = useState();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSearchTermEmpty, setIsSearchTermEmpty] = useState(true);\n  const [searchClicked, setSearchClicked] = useState(false);\n\n  const handleSubmitSearchTermClick = (event) => {\n    event.preventDefault();\n\n    console.log(\"Searching for term:\", searchTerm);\n    setSearchClicked(true);\n    handleSearchClick(searchTerm, userCoordinates[0], userCoordinates[1]);\n  };\n\n  const selectLocationClick = (event) => {\n    event.preventDefault();\n\n    console.log(\"Selected address: \", userAddress);\n\n    setHomeUserAddress(userAddress);\n\n    geocodeByAddress(userAddress.label)\n      .then((results) => getLatLng(results[0]))\n      .then(({ lat, lng }) => {\n        console.log(\"Successfully got latitude and longitude\", { lat, lng });\n        setUserCoordinates([lat, lng]);\n        setIsUserLocated(true);\n      });\n  };\n\n  const locateUser = (event) => {\n    event.preventDefault();\n\n    if (\"geolocation\" in navigator) {\n      console.log(\"location is available\");\n\n      navigator.geolocation.getCurrentPosition((position) => {\n        console.log(\"Latitude: \", position.coords.latitude);\n        console.log(\"Longitude: \", position.coords.longitude);\n\n        setIsLocationExact(true);\n        setUserCoordinates([position.coords.latitude, position.coords.longitude]);\n      });\n    }\n\n    console.log(\"Locating User\");\n  };\n\n  useEffect(() => {\n    console.log(\"Search term changed to: \", searchTerm);\n    if (searchTerm === \"\") {\n      setIsSearchTermEmpty(true);\n    } else {\n      setIsSearchTermEmpty(false);\n    }\n  }, [searchTerm]);\n\n  return (\n    <div className=\"search-header-wrapper text-center\">\n      <div className=\"search-header\">\n        <div className=\"logo-wrapper\">\n          <img src=\"/assets/images/logo.png\" className=\"search-header-logo\" width=\"100\"></img>\n        </div>\n        <div className=\"search-header-text-wrapper\">\n          {isUserLocated ? (\n            <div className=\"search-header-text\">\n              Search for Products or Stores in <span className=\"bold-text green-color\">{userAddress.label}</span>\n            </div>\n          ) : (\n            <div className=\"search-header-text\">Where do you want to find Products or Stores?</div>\n          )}\n        </div>\n        {isUserLocated ? (\n          <div className=\"search-bar-wrapper\">\n            <form onSubmit={handleSubmitSearchTermClick} className=\"form-inline search-bar-form\">\n              <input\n                value={searchTerm}\n                onChange={(event) => setSearchTerm(event.target.value)}\n                type=\"text\"\n                className=\"search-bar\"\n                placeholder=\"Search...\"\n              ></input>\n              <button type=\"submit\" className=\"search-bar-button\">\n                <span className=\"fas fa-search search-bar-icon\"></span>\n              </button>\n            </form>\n          </div>\n        ) : (\n          <div className=\"search-bar-wrapper\">\n            <form className=\"form-inline search-bar-form\">\n              <div className=\"d-flex justify-content-center\">\n                <div className=\"search-header-locate-me\">\n                  <div className=\"d-flex\">\n                    <button onClick={(event) => locateUser(event)} className=\"search-bar-button\">\n                      <span className=\"fas fa-location-arrow location-icon\"></span>\n                    </button>\n                    <span className=\"search-header-text locate-me-text\">{\"  \"}Locate Me</span>\n                  </div>\n                </div>\n                <div className=\"search-header-find-place\">\n                  <div className=\"d-flex\">\n                    <GooglePlacesAutocomplete\n                      style={{ width: \"200px\" }}\n                      selectProps={{\n                        userAddress,\n                        onChange: setUserAddress,\n                      }}\n                    />\n                    <button onClick={(event) => selectLocationClick(event)} className=\"search-bar-button\">\n                      <span className=\"fas fa-arrow-right search-bar-icon\"></span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        )}\n      </div>\n\n      <div className=\"d-flex justify-content-center\">\n\n        {!searchClicked && (isUserLocated ? (\n          <div className=\"under-development-warning\">\n            Search <b>\"iPhone Charger\"</b> to see working version\n          </div>\n        ) : (\n          <div className=\"under-development-warning\">\n            Search <b>\"Moab, UT, USA\"</b> to see working version\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchHeader;\n","import React, { Component } from \"react\";\nimport { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\n\nconst mapStyles = {\n//   height: \"150px\",\n//   width: \"200px\",\n    \n    borderRadius: \"10px\",\n    marginRight: \"29px\"\n};\n\nexport class MapContainer extends Component {\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={14}\n        fullscreenControl={false}\n        mapTypeControl={false}\n        style={mapStyles}\n        initialCenter={{\n          lat: this.props.storeCoordinates[0],\n          lng: this.props.storeCoordinates[1],\n        }}\n      >\n        <Marker onClick={this.onMarkerClick} name={this.props.storeName} />\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  // apiKey: \"AIzaSyAU7ULudFXOAtTuR5ix0a7RLgpYYKRDj-U\",\n  apiKey: \"AIzaSyDiBIZPIuMBCPsaiQxYcqjuQ-WrVSqs90w\"\n})(MapContainer);\n","import React from 'react'\n\nconst StoreCardTag = (props) => {\n    let {iconClass, colorClass, text} = props;\n\n    return (\n        <div className=\"store-card-tag\">\n            <span className={`${iconClass} ${colorClass}`} ></span><span className=\"store-card-tag-text\">{text}</span>\n        </div>\n    )\n}\n\nexport default StoreCardTag;","export const convertTime = (inputTime) => {\n    let hours = inputTime.split(\":\")[0];\n    let minutes = inputTime.split(\":\")[1];\n\n    let outTime = inputTime;\n\n    if (hours == 0){\n        outTime = `12:${minutes}AM`;\n    }else if (hours >= 12){\n        outTime = `${hours-12}:${minutes}PM`;\n    }\n\n    return outTime;\n}","const BASE_URL = \"http://127.0.0.1:5000\"\n\nexport const getSearchUrl = (searchTerm, lat, long) => {\n    return `${BASE_URL}/search?searchTerm=${searchTerm}&latitude=${lat}&longitude=${long}`;\n}\n\nexport const getGMapsDirectionsUrl = (origin, destination) => {\n    let gmaps_url = \"https://www.google.com/maps/dir/?api=1\";\n\n    let formattedOrigin = convertAddressToGoogleUrl(origin);\n    let formattedDestination = convertAddressToGoogleUrl(destination);\n\n    return `${gmaps_url}&origin=${formattedOrigin}&destination=${formattedDestination}`;\n}   \n\nconst convertAddressToGoogleUrl = (addy) => {\n    return addy.replace(\" \", \"+\").replace(\",\", \"%2C\");\n}\n\nconst fixedEncodeURIComponent = (str) => {\n    return encodeURIComponent(str).replace(/[!'()*]/g, (c) => {\n      return '%' + c.charCodeAt(0).toString(16)\n    })\n  }","import React from \"react\";\n\n// Import components\nimport Map from \"./../components/map\";\nimport StoreCardTag from \"./../components/storeCardTag\";\n\n// Import utils\nimport { convertTime } from \"./../utils/numUtils\";\nimport { getGMapsDirectionsUrl } from \"./../utils/urlUtils\";\n\nconst StoreCard = (props) => {\n  let { productData, userAddress } = props;\n\n  return (\n    <div className=\"store-card-wrapper\">\n      <div className=\"store-card\">\n        <div className=\"row\">\n          <div className=\"col-md-6 col-no-padding\">\n            <div className=\"store-card-text-wrapper\">\n              <div className=\"store-card-store-name\">{productData.store_name}<span className=\"store-card-store-distance\">{\"  \"}({productData.distance_from_user} Miles)</span></div>\n              <div className=\"store-card-store-address\">{productData.address}</div>\n              <div className=\"d-flex justify-content-left store-card-tags-wrapper\">\n                <StoreCardTag\n                  iconClass={\"far fa-clock\"}\n                  colorClass={\"aqua-color\"}\n                  text={`Open until ${convertTime(productData.closing_hour)}`}\n                />\n                <StoreCardTag iconClass={\"fas fa-shopping-bag\"} colorClass={\"blue-color\"} text={`Recently in Stock`} />\n              </div>\n              <div className=\"store-card-price-section\">\n                <span className=\"store-card-in-store-price\">${productData.in_store_price}</span> in-store price!{\"  \"}\n              </div>\n              <div className=\"store-card-product-name\">\n                In-store Product Name - \"<span className=\"bold-text\">{productData.product_name}\"</span>\n              </div>\n              <div className=\"store-card-call-to-action-wrapper d-flex justify-content-left\">\n                <a href={`tel:${productData.phone_number}`}>\n                  <button className=\"store-card-reserve-button\">Reserve Now</button>{\" \"}\n                </a>\n                <a\n                  href={getGMapsDirectionsUrl(userAddress.label, productData.address)}\n                  className=\"store-card-directions-button text-center\"\n                >\n                  Directions <span className=\"fas fa-chevron-right\"></span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 col-no-padding\">\n            <div className=\"store-card-map-wrapper\">\n              <Map storeCoordinates={productData.store_coordinates} storeName={productData.store_name} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StoreCard;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\n\n// Import components\nimport SearchHeader from \"./../components/searchHeader\";\nimport StoreCard from \"./../components/storeCard\";\n\n// Import Utils\nimport { getSearchUrl } from \"../utils/urlUtils\";\n\nconst Home = (props) => {\n  const [searchItems, setSearchItems] = useState([]);\n\n  const [relevantResult, setRelevantResult] = useState([]);\n  const [bestPriceResult, setBestPriceResult] = useState([]);\n  const [closestResult, setClosestResult] = useState([]);\n\n  const [userAddress, setHomeUserAddress] = useState();\n  const [isLoadingResults, setIsLoadingResults] = useState(false);\n\n  const handleSearchClick = (searchTerm, userLat, userLong) => {\n    console.log(\"Handling search click with search term: \", searchTerm);\n\n    setIsLoadingResults(true);\n\n    axios.get(getSearchUrl(searchTerm, userLat, userLong)).then((res) => {\n      console.log(\"Response from search: \", res.data);\n\n      setRelevantResult(res.data.relevant_result);\n      setBestPriceResult(res.data.best_price_result);\n      setClosestResult(res.data.closest_result);\n\n      setIsLoadingResults(false);\n    });\n  };\n\n  return (\n    <div className=\"home-wrapper\">\n      <SearchHeader handleSearchClick={handleSearchClick} setHomeUserAddress={setHomeUserAddress} />\n\n      {isLoadingResults && (\n        <div className=\"loading-results-wrapper text-center\">\n          <img src=\"/assets/images/logo48.png\" className=\"loading-karbon-logo\" id=\"karbon-logo\" />\n        </div>\n      )}\n      {!isLoadingResults && (\n        <div className=\"results-wrapper\">\n          {bestPriceResult.length > 0 ? (\n            <div>\n              <div className=\"best-price-wrapper\">\n                <div className=\"best-price-header\">\n                  <span className=\"fas fa-tag\"></span> Best Price\n                </div>\n              </div>\n              {bestPriceResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {bestPriceResult.length > 0 ? (\n            <div>\n              <div className=\"closest-result-wrapper\">\n                <div className=\"closest-result-header\">\n                  <span className=\"fas fa-map-marked-alt\"></span> Closest Location\n                </div>\n              </div>\n              {closestResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n          {relevantResult.length > 0 ? (\n            <div>\n              <div className=\"relevant-result-wrapper\">\n                <div className=\"relevant-result-header\">\n                  <span className=\"far fa-thumbs-up\"></span> Most Relevant\n                </div>\n              </div>\n              {relevantResult.map((item) => (\n                <StoreCard productData={item} userAddress={userAddress} />\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\"\n\nconst Footer = (props) => {\n    return (\n        <div className=\"footer-wrapper\">\n            <div className=\"footer\">\n                <div className=\"footer-text-wrapper\">\n                    <div className=\"footer-text\">\n                        Made with <span className=\"fas fa-heart red-heart\"></span> in San Francisco\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import { HashRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\nimport './App.css';\n\n// Import Pages\nimport Home from \"./pages/home\";\n\n// Import Components\nimport Footer from \"./components/footer\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <div className=\"body-wrapper\">\n          <Switch>\n            <Route path=\"/\" exact component={Home}></Route>\n          </Switch>\n        </div>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}